               INCLUDE HPFIXUPS
               TITLE "KITS/ALT-PARAMS/AUTOREPEAT"
***************************************************************************************************
***************************************************************************************************
***                                                                                             ***
***            KT_ALT_AR - HANDLERS FOR KIT, ALT-PARAMS, AUTOREPEAT SWITCHES                    ***
***                                                                                             ***
***************************************************************************************************
***************************************************************************************************
;
NEG_EXT        EQU     0FFFFFF00H      ;USE IN MOVEQ INSTRUCTIONS WHERE ARG IS
                                       ;80H OR LARGER - HP XASM DOES NOT HANDLE
                                       ;SIGN-EXTEND CORRECTLY.  COSMETIC, KEEPS
                                       ;ACTUAL BYTE VALUE CLEARER.
;
               INCLUDE EQUATES         ;HDW ADDR AND CONSTANT DEFS, ABS_SHORT DIRECTIVE.
;890321               INCLUDE S_BLK_EQU       ;SOUND BLOCK EQUATES/OFFSETS
;
               GLB     _INSTALL_KIT
               GLB     KIT_BANK_SWITCH,COPY_KIT_TO_PADS
               GLB     ALT_PARAM_SWITCH,TOGGLE_ALT_PARAMS
;890321               GLB     SET_ROOT_PITCH
               GLB     AUTORPT_SWITCH
;
               EXTERNAL  BACK_HANDLER       ;EXTERNAL ROM.
               EXTERNAL  GET_PROP_BLK_PTR
               EXTERNAL  LIVE_VOICES_OFF
               EXTERNAL  LIVE_ERASE_SETUP
               EXTERNAL  WRITE_NEW_P_OFFS,WRITE_NEW_M_OFFS
;
               EXTERNAL  PAD_ARB_INDEX      ;RAM.
               EXTERNAL  PAD_CTRL_STAT
               EXTERNAL  CONVERT_DEST
               EXTERNAL  READ_PADS_ASAP
               EXTERNAL  PAD_VEL_AVAIL
               EXTERNAL  AUTORPT_FLAG
               EXTERNAL  AUTO_PADS_ON
               EXTERNAL  CUR_PADS_ON
               EXTERNAL  PAD_VALUE
               EXTERNAL  NEW_PADS_ON
               EXTERNAL  NEW_PADS_OFF
               EXTERNAL  READING_PAD
               EXTERNAL  PAD_STATUS
               EXTERNAL  RECORDING
               EXTERNAL  KIT_PITCHES
               EXTERNAL  CURRENT_SOUND
               EXTERNAL  PAD_JUST_HIT
               EXTERNAL  KIT_INDEX
               EXTERNAL  EDIT_KIT_INDEX
               EXTERNAL  KIT_SOUNDS
               EXTERNAL  PAD_SOUNDS
               EXTERNAL  BUILD_KIT_FLAG
               EXTERNAL  KITS_EDITED
               EXTERNAL  ERASING,XPORT_STATE
               EXTERNAL  ALT_PARAM_FLAG
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; KIT/BANK SWITCH HANDLER -
; FOR CONVENIENCE, KIT IS USED HEREIN TO MEAN USER KIT OR BANK.
; BANKS 1-4 CAN BE THOUGHT OF AS KITS 4-7 IN THIS CONTEXT.
; NORMALLY - ADVANCES KIT_INDEX AND COPIES SETTINGS OF NEWLY-SELECTED
; KIT ONTO CORRESPONDING LIVE PAD ARRAYS (FROM WHICH SOUNDS ARE ACTUALLY
; PLAYED IF NOT IN KIT-BUILD SCREEN) - ALSO DRAGS EDIT_KIT_INDEX ALONG.
; IF IN KIT-BUILD SCREEN, ADVANCES EDIT_KIT_INDEX ONLY AND NO KIT
; INSTALL TO LIVE PAD ARRAYS OCCURS.
;
KIT_BANK_SWITCH
               MOVE    KIT_INDEX,D0         ;FETCH CURRENT KIT NUMBER.
               ADDQ    #1,D0                ;ADVANCE TO NEXT KIT,
               AND     #7,D0                ;WRAPPING AROUND TO 0 AFTER 7.
               BSR.S   _INSTALL_KIT         ;THIS IS WHO REALLY DOES ALL THE WORK.
KIT_BANK_EXIT
                ABS_LONG
               JMP     BACK_HANDLER         ;BACK INTO THE BACKGROUND, WHICH IS ALREADY BEHIND US.
                ABS_SHORT
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
;
;
;
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; KIT/BANK INSTALLATION ROUTINE -
; D0 CONTAINS NEW KIT INDEX (0-7).
; FOR CONVENIENCE, KIT IS USED HERE TO MEAN USER KIT OR BANK.
; PRESET BANKS 1-4 CAN BE THOUGHT OF AS KITS 4-7 IN THIS CONTEXT.
;
; NORMALLY - COPIES KIT ARRAY SETTINGS OF SELECTED KIT ONTO PAD ARRAYS,
; UPDATES KIT_INDEX AND EDIT_KIT_INDEX SO LEDs AND LCD WILL FOLLOW.
; ALSO UPDATES CURRENT_SOUND TO MATCH SOUND IMPLIED BY KIT_INDEX AND
; PAD_JUST_HIT, AGAIN TO KEEP LCD INFORMATION CURRENT.  THEREFORE ....
; IF IN SOUND EDITING SCREEN OR MODE_4_OUT_SUB, MAY (INDIRECTLY) INVOKE
; SUBFUNCTION REINSTALL (IF CURRENT_SOUND CHANGES).
;
; IF IN KIT-BUILD SCREEN/MODE, ACTION IS SAME EXCEPT THAT KIT_INDEX IS
; NOT UPDATED (SINCE IT'S USED BY BACKGROUND TO DETECT CHANGES IN
; EDIT_KIT_INDEX AND INVOKE REDISPLAY), NOR ARE KIT SETTINGS COPIED TO
; PAD-ARRAYS - KIT-BUILD MODE ALWAYS LEAVES PAD ARRAYS UNTOUCHED.
;
; LIKE, TOTALLY PRESERVES ALL REGISTERS, Y'KNOW?
;
_INSTALL_KIT
               MOVEM.L D0/A0-A1,-(A7)       ;STASH A FEW REGINALDS AND GIT INTO IT.
;
               TST     D0                   ;MIDI PROGRAM CHANGE COULD SEND NEGATIVE INDEX HERE -
               BMI.S   INS_KIT_70           ;EXIT WITHOUT ACTION IF THIS HAPPENS.
;
               MOVE    D0,EDIT_KIT_INDEX    ;ALWAYS UPDATE EDIT-TARGET KIT INDEX -
               TST.B   BUILD_KIT_FLAG       ;ARE WE IN KIT-BUILD SCREEN?
               BNE.S   INS_KIT_50           ;BRANCH IF YES, DON'T TOUCH PAD ARRAYS OR KIT_INDEX
                                            ;(USE KIT_INDEX TO TRACK CHANGES IN EDIT_KIT_INDEX).
;
               MOVE    D0,KIT_INDEX         ;NOT IN KIT-BUILD SCREEN/MODE - UPDATE KIT_INDEX,
               BSR.S   COPY_KIT_TO_PADS     ;COPY THIS KIT'S SETTINGS TO PAD ARRAYS.
;
INS_KIT_50
               MOVE    KIT_INDEX,D0         ;FIND CELL FOR PAD_JUST_HIT IN NEW KIT,
               LSL     #3,D0
               ADD     PAD_JUST_HIT,D0
               MOVE    D0,A0
               MOVE.B  PAD_SOUNDS(A0),D0    ;LOAD SOUND NUMBER / ALT PARAMS BIT.
               LSR     #1,D0                ;SCRAPE OFF THE ALT BIT,
               MOVE    D0,CURRENT_SOUND     ;PRESTO - NEW CURRENT SOUND STATUS TOO.
;
INS_KIT_70
               MOVEM.L (A7)+,D0/A0-A1
INS_KIT_EXIT
               RTS
;
;
;
; COPY KIT SETTINGS TO CORRESPONDING PAD ARRAYS -
; D0 CONTAINS KIT INDEX.
; ALL REGS PRESERVED.
;
COPY_KIT_TO_PADS
               MOVEM.L D0/A0-A1,-(A7)
;
               MOVE    #KIT_SOUNDS,A0       ;COPY NEW KIT SETTINGS INTO CORRESPONDING PAD ARRAYS -
               LSL     #3,D0                ;INDEX INTO KIT ARRAY PER KIT_INDEX.
               ADD     D0,A0
               MOVE    #PAD_SOUNDS,A1
               ADD     D0,A1                ;INDEX LIKEWISE INTO PAD ARRAY.
               MOVEQ   #3,D0                ;COPY FROM FOUR ARRAYS (SOUNDS,PITCHES,VOLUMES,PANS).
CPY_KIT_30
               MOVE.L  (A0)+,(A1)+          ;TRANSFER EIGHT BYTES PER ARRAY.
               MOVE.L  (A0)+,(A1)+
               LEA     56(A0),A0            ;BUMP UP TO NEXT KIT ARRAY,
               LEA     56(A1),A1            ;BUMP UP TO NEXT PAD ARRAY.
               DBRA    D0,CPY_KIT_30
;
               MOVEM.L (A7)+,D0/A0-A1
               RTS
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; ALTERNATE-PARAMETERS SWITCH HANDLER -
; SWITCH-HANDLER ACCESS TO TOGGLE_ALT_PARAMS.
; FOR MORE INFO, REFER TO COMMENTS FOR THAT ROUTINE (NOT FAR BELOW).
;
ALT_PARAM_SWITCH
               BSR.S   TOGGLE_ALT_PARAMS    ;SUBROUTINE, SO IT CAN BE CALLED BY MIDI, ET AL.
                ABS_LONG
               JMP     BACK_HANDLER
                ABS_SHORT
;
;
;
; ALT-PARAMS ARRAY DIDDLER - TWO OPERATIONAL MODES:
;
; IF NOT IN KIT-BUILD SCREEN/MODE, TOGGLES ALT-PARAMS BITS IN EVERY CELL
; OF LIVE PAD ARRAYS - PRESET KIT/BANK ARRAYS ARE NOT TOUCHED.
;
; IF IN KIT-BUILD SCREEN/MODE, TOGGLES ONLY THE SINGLE CELL IN THE
; SELECTED KIT PRESET ARRAY WHICH APPLIES TO THE MOST RECENTLY HIT PAD -
; LIVE PAD ARRAYS ARE NOT TOUCHED (AS PER THE KIT-BUILD CREED).
;
; INVOKES SUBFUNCTION REINSTALLATION IF IN KIT OR SOUND EDITING SCREEN
;  - INDIRECTLY, VIA DAEMON WHICH RUNS IN ROTATIONAL BACKGROUND.
; THIS DAEMON DRIVES ALT_PARAM_FLAG AND LED TO FOLLOW THE STATUS OF
; PAD_JUST_HIT IN SELECTED KIT (EDIT_KIT_INDEX IF IN KIT-BUILD MODE,
; KIT_INDEX IF NOT).
;
; NO INPUTS, PRESERVES ALL REGISTERS - IF YOU CAN HANDLE THAT.
;
TOGGLE_ALT_PARAMS
               MOVEM.L D0-D1/A0,-(A7)
;
               BCHG    #0,ALT_PARAM_FLAG+1  ;THIS GOTTA ALWAYS HAPPEN, SO DO IT NOW!
;
               TST.B   BUILD_KIT_FLAG       ;ARE WE IN KIT-BUILD SCREEN?
               BNE.S   TOG_ALT_40           ;BRANCH IF YES.
;
               MOVE    #PAD_SOUNDS,A0       ;NOT IN KIT-BUILD SCREEN, DO ALL PAD ARRAY CELLS.
               MOVE.L  #01010101H,D1        ;SET UP MASK WORD FOR ARRAY UPDATE.
               MOVEQ   #15,D0               ;IT'LL BE DONE FOUR BYTES AT A CRACK.
TOG_ALT_20
               EOR.L   D1,(A0)+
               DBRA    D0,TOG_ALT_20
               BRA.S   TOG_ALT_A0
;
TOG_ALT_40
               MOVE    EDIT_KIT_INDEX,D0    ;WE'RE IN KIT-BUILD MODE - FETCH EDIT-KIT INDEX,
               BSET    D0,KITS_EDITED       ;FLAG THIS KIT AS HAVING BEEN EDITED,
               LSL     #3,D0                ;AMP-UP TO ARRAY CELL INDEX,
               ADD     PAD_JUST_HIT,D0      ;BUMP UP TO CELL FOR MOST RECENTLY-PLAYED PAD,
               MOVE    D0,A0                ;THIS BE OUR PRESET ARRAY INDEX -
               BCHG    #0,KIT_SOUNDS(A0)    ;TOGGLE JUST THIS CELL'S ALT-PARAMS SETTING.
;
TOG_ALT_A0
               TST.B   ERASING              ;NEW SETTINGS IN PLACE - ARE WE IN SEQ LIVE ERASE MODE?
               BEQ.S   TOG_ALT_B0           ;BRANCH IF NOT,
               JSR     LIVE_ERASE_SETUP     ;ELSE REINITIALIZE ERASE MAP AND PAD BUFFER - THIS WILL
                                            ;BLOW OUT ALL MIDI "PADS", BUT REAL PADS AND FOOTSWITCH
                                            ;"PADS" BEING HELD WILL GET BACK INTO THE MAP/BUFFER.
;
TOG_ALT_B0
               MOVEM.L (A7)+,D0-D1/A0
TOG_ALT_EXIT
               RTS
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; AUTOREPEAT SWITCH HANDLER -
; TOGGLES AUTORPT_FLAG AND ASSOCIATED LED, HANDLES ALL HOUSEKEEPING
; REQUIRED FOR SMOOTH TRANSITION INTO OR OUT OF AUTOREPEAT PAD SCAN
; MODE.
;
AUTORPT_SWITCH
               TST.B   AUTORPT_FLAG         ;ARE WE ON OR ARE WE NOT?
               BEQ.S   AUTORPT_ON           ;BRANCH IF OFF, WE'RE GOING ON.
;
               SF      AUTORPT_FLAG         ;IT WERE ON, NOW IT GONE OFF
               BSET    #6,PAD_CTRL_STAT     ;OFF THE LED THAT USED TO SHINE ....
                                            ;IT SHOULD GET OUT THERE VIA REALTIME PAD-SCAN ROUTINE.
               MOVE    #2300H,SR            ;BLOCK REALTIME INTERRUPT -
               CLR     PAD_ARB_INDEX        ;HARD-SYNC PAD SCAN BACK TO PAD 0 - THIS IS NECESSARY
                                            ;SINCE AUTOREPEAT PAD_ARB_INDEX REGULARLY HITS -1,
                                            ;WHICH IS N.F.G. FOR NORMAL PAD-SCAN MODE.
               AND.B   #0F8H,PAD_CTRL_STAT  ;CONTINUING - PUT OUT PAD 0 ADDRESS,
                ABS_LONG
               MOVE.B  PAD_CTRL_STAT,PAD_CONTROL
               MOVE    #0,SELECT_CTRL+0     ;START ADC READING PADS CHANNEL,
                ABS_SHORT
               MOVE    #300,D0              ;DELAY TO ALLOW ADC READ TO COMPLETE.
AUTORPOF_10
               DBRA    D0,AUTORPOF_10
               MOVE    #PAD_VALUE+1,CONVERT_DEST ;ADDRESS OF THE PAD_VALUE CELL FOR PAD 0 -
                                                 ;READ WILL GET STORED HERE.
               ST      READING_PAD          ;THIS TELLS PAD-SCAN THAT IT WAS READING PAD, NOT POT.
               MOVE    #2000H,SR            ;RE-ENABLE INTERRUPTS, ALL SHOULD BE COOL.
               BRA.S   AUTORPT_EXIT         ;NOT MUCH ELSE TO DO, THIS SHOULD TAKE CARE OF IT.
;
AUTORPT_ON
               TST.B   ERASING              ;AUTOREPEAT GOING ON - UNLESS WE'RE IN ERASE MODE.
               BNE.S   AUTORPT_EXIT         ;BECAUSE, THAT WOULD BE WEIRD.
               BTST    #3,XPORT_STATE       ;IF PLAY BUTTON NOT ON IN TRANSPORT
               BEQ.S   AUTORPT_EXIT         ;    THEN DON'T ENTER AUTOREPEAT - WOULD SEEM TO KILL PADS
               ST      AUTORPT_FLAG         ;AUTOREPEAT GOING ON - WAVE THAT FLAAA-AAAG ....
               BCLR    #6,PAD_CTRL_STAT     ;LET THE LIGHT SHINE, ETC ETC.
                                            ;IT SHOULD GET OUT THERE VIA REALTIME PAD-SCAN ROUTINE.
;
               MOVE    #2300H,SR            ;FREEZE PAD SCAN, VOICE VECTORS -
               SF      AUTO_PADS_ON         ;IT'S TABULA RASA TIME ....
               SF      CUR_PADS_ON
               CLR.L   PAD_VALUE
               CLR.L   PAD_VALUE+4
               CLR.L   PAD_VALUE+8
               CLR.L   PAD_VALUE+12
                                            ;THE FOLLOWING STAY CLEAR AS LONG AS WE ARE IN AUTORPT:
               SF      NEW_PADS_ON
               SF      NEW_PADS_OFF
               SF      READING_PAD
               SF      READ_PADS_ASAP
               SF      PAD_VEL_AVAIL
               CLR.L   PAD_STATUS
               CLR.L   PAD_STATUS+4
               CLR.L   PAD_STATUS+8
               CLR.L   PAD_STATUS+12
;
               JSR     LIVE_VOICES_OFF      ;GATE OFF OR KILL ANY GATED-ON LIVE VOICES,
                                            ;SINCE MATCHING NOTE-OFF EVENTS MAY NOT BE FORTHCOMING.
;
               MOVE    #2000H,SR            ;RE-NAYBLE LEVEL 3 (2, TOO) INTERRUPT.
;
               TST.B   RECORDING            ;ARE WE RECORDING AT THE MOMENT?
               BEQ.S   AUTORPT_EXIT         ;BRANCH IF NOT,
                ABS_LONG
               JSR     WRITE_NEW_P_OFFS     ;ELSE, RECORD NOTE-OFFS FOR ALL LIVE NOTES ON - PADS,
               JSR     WRITE_NEW_M_OFFS     ;AND MIDI AS WELL.
                ABS_SHORT
;
AUTORPT_EXIT
               RTS
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

