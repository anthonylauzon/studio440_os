               INCLUDE HPFIXUPS
               TITLE "DISKLOW1"
**************************************************************************************************
**************************************************************************************************
***                                                                                            ***
***            DISKLOW1 - LOW-LEVEL FLOPPY START-UP, CHECK AND HEAD-MOVEMENT ROUTINES          ***
***                                                                                            ***
**************************************************************************************************
**************************************************************************************************
;
NEG_EXT        EQU     0FFFFFF00H      ;USE IN MOVEQ INSTRUCTIONS WHERE ARG IS
                                       ;80H OR LARGER - HP XASM DOES NOT HANDLE
                                       ;SIGN-EXTEND CORRECTLY.  COSMETIC, KEEPS
                                       ;ACTUAL BYTE VALUE CLEARER.
;
               INCLUDE EQUATES         ;HDW ADDR AND CONSTANT DEFS, ABS_SHORT DIRECTIVE.
;
               INCLUDE DISKDEFS        ;DISK SYSTEM DEFINITIONS.
;
               GLB     CLEAR_FDC,STEP_INWARD,SPIN_DISK,CHECK_DRIVE
               GLB     CHECK_SPEED,DELAY_32USEC,TO_TRK_00,BLIND_SEEK
               GLB     DLY_20_MSEC,START_FLOPPY,RE_SEEK,INDEX_SYNC
;
               EXTERNAL  INDEX_COUNT
               EXTERNAL  DISKTEMP1
               EXTERNAL  CURRENT_TRACK
;
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!                                                                                            !!!
;!!!                               A NOTE OF NO REAL IMPORTANCE                                 !!!
;!!!                                                                                            !!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;
; THOSE OF YOU FAMILIAR WITH THE MODEL 2000 FLOPPY DISK SYSTEM MAY RECALL HAVING SEEN, NEAR THIS
; POINT IN THE SOURCE CODE, A LENGHTY AND CONVOLUTED DISSERTATION REGARDING A BUG IN THE WD1770
; CHIP REGARDING ADDRESS TIMINGS, FOLLOWED BY A PAGE OF MACRO DEFINITIONS WHICH WERE USED TO CREATE
; A SOFTWARE FIX FOR THIS BUG.  WELL .... SINCE THE BUS TIMING OF THE 68000 IS HOPELESSLY MORE
; COMPLEX AND DIFFICULT TO CONTROL THAN THAT OF THE 6809, IT WAS DECIDED NOT TO PUSH OUR LUCK THIS
; TIME - ADDRESS LINES TO THE FDC ARE LATCHED, CHIP SELECT IS DELAYED VIA VPA/VMA CIRCUIT,
; AND NO KLUGEY MACRO FIXES ARE NEEDED.
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; WAIT FOR / FORCE FDC TO NOT-BUSY STATE.
; RETURNS Z FLAG TRUE IF SUCCESSFUL, OR ERROR CODE IN D0.
; DESTROYS D0.
;
CLEAR_FDC
               MOVE.W  #CLEAR_TIME,DISKTEMP1     ;SET UP TIMEOUT COUNTER, ~100 MSEC.
CLR_FDC_1
               BTST    #FDC_BUSY,DISK_STAT  ;(20)
               BEQ.S   CLR_FDC_EXIT         ;(12) RETURN Z = 1 IF FDC NOT BUSY.
               MOVE.B  #FORC_INTR,DISK_CMD  ;(16) FDC IS BUSY, (TRY TO) FORCE IT CLEAR.
               BSR     DELAY_32USEC         ;(256) ALLOW TIME FOR FORCE-INTR CMD TO TAKE EFFECT.
               SUBQ    #1,DISKTEMP1         ;(16) DECREMENT TIMEOUT COUNTER.
               BNE     CLR_FDC_1            ;(10) REPEAT LOOP UNTIL TIMEOUT OR FDC NOT BUSY.
;
               MOVEQ   #FDC_IS_HUNG,D0      ;TIMED OUT - RETURN ERROR CODE IN D0.
CLR_FDC_EXIT
               RTS
;
;
CLEAR_TIME     EQU     2381                 ;334 CY = 42 USEC/LOOP, LOOP FOR 100 MSEC MAX.
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
;
;
;
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; ISSUE A SINGLE STEP-IN PULSE TO DRIVE -
; USE TRACK REGISTER AUTO-UPDATE, BUT DON'T DO TRACK VERIFY
; (AVOIDS NEEDLESS DELAY DURING DISK FORMATTING).
; DESTROYS D0 - NO COMPLETION CODE IS RETURNED.
;
STEP_INWARD
;881025               MOVE.B  #STEP_IN.AN.DONT_VER,DISK_CMD
               MOVE.B  #STEP_IN&DONT_VER,DISK_CMD
;
               BSR     DELAY_32USEC         ;ALLOW TIME FOR FDC STATUS TO BECOME VALID.
STEP_1
               BTST    #FDC_BUSY,DISK_STAT  ;LOOP UNTIL FDC IS NOT BUSY - NO ERROR CODES RETURNED.
               BNE     STEP_1
STEP_EXIT
               RTS
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; START/MAINTAIN SPINDLE MOTOR ROTATION:
; DESTROYS D0 - NO COMPLETION CODE IS RETURNED.
;
SPIN_DISK
               MOVE.B  DISK_TRACK,DISK_DATA ;EXECUTE SEEK TO CURRENT TRACK, WITHOUT TRACK VERIFY -
                                            ;THIS DOES NOTHING OTHER THAN START MOTOR SPINNING.
;881025               MOVE.B  #SEEK.AN.DONT_VER,DISK_CMD
               MOVE.B  #SEEK&DONT_VER,DISK_CMD
               BSR     DELAY_32USEC         ;ALLOW TIME FOR FDC STATUS TO BECOME VALID.
               RTS
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
;
;
;
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; WATCH FOR OCCURRENCE OF AN INDEX PULSE WITHIN 20 MSEC WINDOW
; AND VERIFY THAT DRIVE IS STAYING READY - MUST BE USED WITH
; KNOWN RELATIONSHIP TO A PREVIOUS INDEX PULSE (NOT NECESSARILY
; THE MOST RECENT).  RETURNS IMMEDIATELY UPON DETECTING ANY
; CHANGE ON THE INDEX INPUT, ALLOWING SYNCHRONIZATION TO BE MAINTAINED.
; REPEATED CALLS LESS THAN TWO SECONDS APART WILL KEEP
; DRIVE SPINNING CONTINUOUSLY.
; RETURNS Z FLAG SET IF INDEX PULSE EDGE IS SEEN WITHIN 20MSEC WINDOW -
; ELSE RETURNS Z FLAG CLEAR, ERROR CODE IN D0.
; ALL OTHER REGISTERS PRESERVED.
;
INDEX_SYNC
               MOVEM.L D1-D2,-(A7)
               MOVE    #SYNC_TIME,D1        ;THIS IS HOW LONG WE'LL WAIT.
               BSR     SPIN_DISK            ;KEEP DISK SPINNING.
               MOVE.B  DISK_STAT,DISKTEMP1  ;READ CURRENT INDEX STATUS.
INDSYNC_10
               MOVE.B  DISK_STAT,D2         ;READ NEW INDEX STATUS,
               EOR.B   D2,DISKTEMP1         ;COMPARE OLD, NEW INDEX BIT STATUS.
               BTST    #INDEX,DISKTEMP1     ;DID IT CHANGE?
               BNE.S   INDSYNC_20           ;BRANCH IF YES,
               MOVE.B  D2,DISKTEMP1         ;ELSE SAVE NEW (BUT NOT DIFFERENT) STATUS,
               DBRA    D1,INDSYNC_10        ;DECREMENT TIMEOUT AND KEEP LOOKING.
;
               MOVE.B  #FORC_INTR,DISK_CMD  ;TIMEOUT OCCURRED - CLEAR FDC,
               MOVEQ   #NO_DISK,D0          ;RETURN ERROR CODE IN D0.
               BRA.S   INDSYNC_40
;
INDSYNC_20
               CLR     D0                   ;RETURN Z=1 IF INDEX PULSE SEEN WITHIN TIME WINDOW.
INDSYNC_40
               MOVEM.L (A7)+,D1-D2          ;REMEMBER US?
INDSYNC_EXIT
               RTS
;
;
SYNC_TIME      EQU     1739                 ;ROUGH-LY 20MSEC.
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; DRIVE START-UP -
; SUCCESSFUL COMPLETION INDICATES A DISK IS IN DRIVE
; AND ROTATING AT CORRECT SPEED - USE WHEN DRIVE IS LIKELY
; NOT TO BE READY (E.G. AT DISK OPERATION INITIATION):
; RETURNS Z FLAG TRUE IF SUCCESSFUL, OR ERROR CODE IN D0.
; DESTROYS D0, D1, D4.
;
CHECK_DRIVE
               MOVE.W  #CHECK_TIME,DISKTEMP1     ;ALLOW 600 MSEC TO DETECT AT LEAST 1 INDEX PULSE.
               BSR     SPIN_DISK            ;(TRY TO) GET DRIVE SPINNING, SET FDC TO TYPE 1 STATUS.
               MOVE.B  DISK_STAT,D4         ;READ AND SAVE CURRENT INDEX STATUS.
               CLR     INDEX_COUNT          ;LOOP UNTIL 2 INDEX PULSES SEEN.
CHK_DRV_2
               MOVE.B  D4,D0                ;( 4) GET LAST-READ INDEX STATUS.
               MOVE.B  DISK_STAT,D4         ;(16) SAVE NEW INDEX STATUS.
               NOT.B   D0                   ;( 4) INVERT THE OLD STATUS,
               AND.B   D4,D0                ;( 4) "AND" WITH NEW - WANT INDEX PULSE LEADING EDGE,
               BTST    #INDEX,D0            ;(10) I.E., A 0-TO-1 TRANSITION.
               BNE.S   CHK_DRV_3            ;(12)
               BSR     DELAY_32USEC         ;(256) ADDS 32 USEC PER LOOP ITERATION.
               SUBQ    #1,DISKTEMP1         ;(16) NO INDEX CHANGE - DECREMENT TIMEOUT COUNTER.
               BNE     CHK_DRV_2            ;(10)
;
               MOVE.B  #FORC_INTR,DISK_CMD  ;TIMED OUT - CLEAR FDC AND RETURN ERROR CODE IN D0.
               MOVEQ   #NO_DISK,D0
               BRA     CHK_DRV_EXIT
;
CHK_DRV_3
               ADDQ    #1,INDEX_COUNT            ;INDEX PULSE DETECTED -
               CMP     #2,INDEX_COUNT            ;WAS THIS THE SECOND ONE?
               BEQ.S   CHK_DRV_4                 ;YES - PROCEED TO DISK ROTATIONAL SPEED TEST.
               MOVE.W  #CHECK_TIME,DISKTEMP1     ;NO - RESTART TIMEOUT COUNTER,
               BRA     CHK_DRV_2                 ;GO BACK FOR SECONDS .....
CHK_DRV_4
               MOVE.W  #SPINUP_TIME,DISKTEMP1    ;DISK INSERTED AND ROTATING - ALLOW UP TO 1 SECOND
CHK_DRV_5                                        ;FOR SPINUP SEQUENCE TO COMPLETE.
               BTST    #FDC_BUSY,DISK_STAT  ;(20) AWAIT SPIN_UP SEQUENCE COMPLETION, FDC NOT BUSY.
               BEQ.S   CHECK_SPEED          ;(12) IF FDC NOT BUSY, GO TO SPEED TEST.
               BSR     DELAY_32USEC         ;(256) EXTRA DELAY PER LOOP.
               BSR     DELAY_32USEC         ;(256)
               BSR     DELAY_32USEC         ;(256)
               BSR     DELAY_32USEC         ;(256)
               SUBQ    #1,DISKTEMP1         ;(16) DECREMENT TIMEOUT COUNTER.
               BNE     CHK_DRV_5            ;(10)
CHK_DRV_7
               MOVE.B  #FORC_INTR,DISK_CMD  ;TIMED OUT -  CLEAR FDC AND RETURN "NO DISK" CODE.
               MOVEQ   #NO_DISK,D0
               BRA     CHK_DRV_EXIT
;
;
;
; DRIVE ROTATIONAL SPEED CHECK -
; USE WHEN DRIVE IS EXPECTED TO BE READY, TO VERIFY THAT IT IS
; SPINNING WITHIN SPEED TOLERANCES (200 MSEC/REV, +-2.5%).
; (CHECK_DRIVE PASSES THRU THIS WAY WHEN IT COMPLETES SUCCESSFULLY):
; RETURNS Z FLAG TRUE IF SUCCESSFUL, OR ERROR CODE IN D0.
;
CHECK_SPEED
               CLR     INDEX_COUNT               ;MEASURE TIME BETWEEN NEXT TWO INDEX PULSES.
               MOVE.W  #CHECK_TIME,DISKTEMP1     ;USE 600 MSEC TIMEOUT HERE (IN CASE DISK REMOVED).
               BSR     SPIN_DISK                 ;START FDC, SET IT TO GIVE TYPE 1 STATUS (IN CASE
                                                 ;CHECK_SPEED CALLED AFTER A TYPE 2 OR 3 COMMAND).
               MOVE.B  DISK_STAT,D4              ;READ AND SAVE CURRENT INDEX STATUS.
;
CHK_SPD_1
                                            ;THIS LOOP IS AS PER CHK_DRV_2 (ABOVE).
               MOVE.B  D4,D0                ;( 4)
               MOVE.B  DISK_STAT,D4         ;(16)
               NOT.B   D0                   ;( 4)
               AND.B   D4,D0                ;( 4)
               BTST    #INDEX,D0            ;(10)
               BNE.S   CHK_SPD_2            ;(12) BRANCH IF AN INDEX PULSE HAS BEEN DETECTED,
               BSR     DELAY_32USEC         ;(256) ADDS 32 USEC PER LOOP ITERATION.
               SUBQ    #1,DISKTEMP1         ;(16) ELSE ADVANCE INTERVAL TIMER AND
               BNE     CHK_SPD_1            ;(10) KEEP WATCHING (TIMEOUT ERROR AFTER 1.15 SEC).
;
               TST     INDEX_COUNT          ;TIMED OUT - IS INDEX PULSE #1 TIME STAMP ON STACK?
               BEQ     CHK_DRV_7            ;NO - GO DIRECTLY TO ERROR TERMINATION POINT.
               ADDQ    #2,A7                ;YES - DISCARD IT FROM STACK, THEN GET OUT.
               BRA     CHK_DRV_7
;
CHK_SPD_2
               ADDQ    #1,INDEX_COUNT       ;INDEX PULSE DETECTED - IS IT #1 OR #2?
               CMP     #2,INDEX_COUNT
               BEQ.S   CHK_SPD_3            ;IF IT IS #2, GO COMPUTE REVOLUTION TIME,
               MOVE    DISKTEMP1,-(A7)      ;ELSE SAVE PRESENT TIME ON STACK,
               BRA     CHK_SPD_1            ;GO BACK FOR SECONDS ....
;
CHK_SPD_3
               MOVE    (A7)+,D0             ;COMPUTE ELAPSED TIME FROM PULSE #1 TO PULSE #2,
               SUB     DISKTEMP1,D0         ;CLEARING TIME #1 FROM STACK.
               CMP     #MIN_TIME,D0         ;TEST THE RESULT AGAINST LIMITS -
               BLT.S   CHK_SPD_4            ;TAKE THIS BRANCH IF TIME WAS TOO SHORT,
               CMP     #OUT_TIME,D0
               BHI     CHK_DRV_7            ;OR THIS BRANCH IF TIME WAS WAY TOO LONG,
               CMP     #MAX_TIME,D0
               BHI.S   CHK_SPD_5            ;OR THIS BRANCH IF TIME WAS A BIT TOO LONG,
               CLR     D0
               BRA.S   CHK_DRV_EXIT         ;OR THIS ONE IF IT WAS JUST RIGHT.
CHK_SPD_4
               MOVE.B  #FORC_INTR,DISK_CMD  ;DISK SPINNING TOO FAST - CLEAR FDC, RETURN ERROR CODE.
               MOVEQ   #OVER_SPEED,D0
               BRA.S   CHK_DRV_EXIT
CHK_SPD_5
               MOVE.B  #FORC_INTR,DISK_CMD  ;DISK SPINNING TOO SLOW - CLEAR FDC, RETURN ERROR CODE.
               MOVEQ   #UNDER_SPEED,D0
CHK_DRV_EXIT
               RTS
;
;
;14AUGCHECK_TIME     EQU     14118                ;APPROX 42.5 USEC/LOOP, LOOP FOR 600 MSEC MAX.
;
CHECK_TIME     EQU     23530                ;APPROX 42.5 USEC/LOOP, LOOP FOR 1 SEC MAX - CHANGED
                                            ;FROM 600 MSEC MAX TO ACCOMMODATE Y-E DATA DRIVE, WHICH
                                            ;FOR SOME REASON TAKES A HELLUVA LONG TIME TO START
                                            ;PUTTING OUT INDEX PULSES EVEN AFTER IT IS ALREADY
                                            ;SPINNING.  OTHERWISE, 600 MSEC IS MORE THAN ENOUGH.
                                            ;THIS AFFECTS THE "NO DISK IN DRIVE" DETECTION TIME.
;
SPINUP_TIME    EQU     7394                 ;APPROX 135.25 USEC/LOOP, LOOP FOR 1 SECOND MAX.
NOM_TIME       EQU     4706                 ;LOOP COUNT AT NOMINAL 300 RPM (OR 200 MSEC/REV) SPEED.
MIN_TIME       EQU     4591                 ;LOOP COUNT AT 2.5% ABOVE NOMINAL SPEED.
MAX_TIME       EQU     4824                 ;LOOP COUNT AT 2.5% BELOW NOMINAL SPEED.
OUT_TIME       EQU     4941                 ;LOOP COUNT AT 5.0% BELOW NOMINAL SPEED -
                                            ;THIS PROBABLY MEANS THE DISK HAS BEEN PULLED OUT.
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
;
;
;
;
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; CALL THIS ROUTINE TO OBTAIN A 32 USEC DELAY (INCLUDING
; BSR-RTS SEQUENCE), BY WHICH TIME FDC STATUS WILL BE VALID
; AFTER RECEIVING A COMMAND.
; DESTROYS D0.
;
DELAY_32USEC
               MOVEQ   #15,D0                ;( 4)
               BRA     DELAY32_1             ;(10)
DELAY32_1
               SUBQ    #1,D0                 ;(4*15)
               BNE     DELAY32_1             ;(10*14 + 8) BRANCH NOT TAKEN ON 15TH ITERATION.
               RTS                           ;(16)
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; MOVE READ/WRITE HEAD OUT TO TRACK 00 - NO TRACK VERIFY:
; RETURNS Z FLAG TRUE IF SUCCESSFUL, OR ERROR CODE IN D0.
; DESTROYS D0.
;
TO_TRK_00
;881025               MOVE.B  #RESTORE.AN.DONT_VER,DISK_CMD
               MOVE.B  #RESTORE&DONT_VER,DISK_CMD
;
               BSR     DELAY_32USEC         ;ALLOW TIME FOR FDC STATUS TO BECOME VALID.
;
               MOVE.W  #RESTORE_TIME,DISKTEMP1   ;ALLOW 600 MSEC FOR HEAD REPOSITIONING.
TRK_00_2
               MOVE.B  DISK_STAT,D1         ;(16) LOOP UNTIL ...
               BTST    #FDC_BUSY,D1         ;(10)
               BEQ.S   TRK_00_3             ;(12) FDC IS NOT BUSY OR TIMEOUT OCCURS.
               BSR     DELAY_32USEC         ;(256) EXTRA DELAY TIME PER LOOP.
               BSR     DELAY_32USEC         ;(256)
               BSR     DELAY_32USEC         ;(256)
               BSR     DELAY_32USEC         ;(256)
               SUBQ    #1,DISKTEMP1         ;(16)
               BNE     TRK_00_2             ;(10)
;
               MOVE.B  #FORC_INTR,DISK_CMD  ;IF TIMED OUT, CLEAR FDC AND RETURN ERROR CODE.
               MOVEQ   #SEEK_ERROR,D0       ;MEANING, "HEAD SHOULD HAVE BEEN AT TRACK 00 BY NOW."
               BRA.S   TRK_00_EXIT
;
TRK_00_3
               BTST    #TRACK_00,D1         ;FDC NOT BUSY, IS HEAD AT TRACK 00?
               BNE.S   TRK_00_4             ;YES  -  EXECUTE HEAD-SETTLING DELAY.
               MOVEQ   #SEEK_ERROR,D0       ;NO  -  RETURN Z=0, D0=ERROR CODE.
               BRA.S   TRK_00_EXIT
TRK_00_4
               BSR     DLY_20_MSEC          ;ENSURE HEAD SETTLED BEFORE TRACK 00 IS ACCESSED.
               CLR     D0                   ;RETURN Z FLAG SET TO INDICATE NO ERROR.
TRK_00_EXIT
               RTS
;
;
RESTORE_TIME   EQU     4412                 ;1088 CY = 136 USEC/LOOP, LOOP FOR 600 MSEC MAX.
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; SEEK TO TRACK INDICATED IN D0 - NO TRACK VERIFY:
; RETURNS Z FLAG TRUE IF SUCCESSFUL, OR ERROR CODE IN D0.
;
BLIND_SEEK
               MOVE.B  D0,DISK_DATA                   ;DESTINATION TRACK NUMBER PASSED IN D0.
;881025               MOVE.B  #SEEK.AN.DONT_VER,DISK_CMD     ;SEEK DEST TRACK, NO TRACK POSITION VERIFY.
               MOVE.B  #SEEK&DONT_VER,DISK_CMD     ;SEEK DEST TRACK, NO TRACK POSITION VERIFY.
;
               BSR     DELAY_32USEC         ;ALLOW TIME FOR FDC STATUS TO BECOME VALID.
;
               MOVE.W  #SEEK_TIME,DISKTEMP1 ;ALLOW UP TO 1.6 SEC TO COMPLETE:
                                            ;    UP TO 80 TRACKS @ 6 MSEC/TRACK -
                                            ;    30 MSEC HEAD SETTLING PERIOD -
                                            ;    1 SEC (5 DISK REVOLUTIONS) ID SEARCH -
                                            ;    0.1 SEC SLOP TIME (WHAT THE FUCK, EH?)
SEEK_TRK_2
               MOVE.B  DISK_STAT,D1         ;(16) LOOP UNTIL FDC NOT BUSY, OR TIMEOUT.
               BTST    #FDC_BUSY,D1         ;(10)
               BEQ.S   SEEK_TRK_EXIT        ;(12) FDC NOT BUSY - WE MUST BE THERE.
               BSR     DELAY_32USEC         ;(256) EXTRA DELAY TIME PER LOOP.
               BSR     DELAY_32USEC         ;(256)
               BSR     DELAY_32USEC         ;(256)
               BSR     DELAY_32USEC         ;(256)
               SUBQ    #1,DISKTEMP1         ;(16)
               BNE     SEEK_TRK_2           ;(10)
;
               MOVE.B  #FORC_INTR,DISK_CMD  ;TIMED OUT  -  CLEAR FDC AND RETURN ERROR CODE.
               MOVEQ   #SEEK_ERROR,D0       ;MEANING, "FDC SHOULD HAVE STOPPED BY NOW."
;
SEEK_TRK_EXIT
               RTS
;
;
SEEK_TIME      EQU     11765                ;1088 CY = 136 USEC/LOOP, LOOP FOR 1.6 SECONDS MAX.
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; 20 MSEC DELAY USED AFTER READ/WRITE HEAD HAS SEEKED/STEPPED
; TO DESTINATION TRACK WITHOUT AUTOMATIC FDC DESTINATION TRACK
; VERIFY REQUESTED.  USED WHEN BUILT-IN 30 MSEC FDC DELAY WOULD BE
; EXCESSIVE (MOST DRIVES REQUIRE ONLY 15 MSEC MAX) AND/OR FDC
; FOUR-REV TRACK-POSITION VERIFY TIMEOUT WOULD BE TOO LONG
; AND TRACK POSITION WILL BE VERIFIED IMPLICITLY DURING
; SUBSEQUENT COMMAND SEQUENCE:
;
DLY_20_MSEC
               MOVE.W  #SETTLE_TIME,DISKTEMP1
DLY_20_1
               SUBQ    #1,DISKTEMP1         ;(16)
               BNE     DLY_20_1             ;(10)
               RTS
;
SETTLE_TIME    EQU     6154                 ;26 CY = 3.25 USEC/LOOP, LOOP FOR 20 MSEC.
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               SKIP
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; CALL HERE WHENEVER A DISK OPERATION IS INITIATED FROM SCRATCH -
; THE DRIVE HAS PROBABLY BEEN IDLE FOR LONG ENOUGH TO STOP
; SPINNING, AND THE DISK MAY HAVE BEEN REMOVED - ALSO, IF THIS IS
; THE FIRST OPERATION AFTER POWER-UP, THE POSITION OF THE HEAD IS
; UNKNOWN.  FOR PAUSES IN MID-OPERATION (E.G. TO OBTAIN USER
; RESPONSE) WHEN IT IS UNDESIREABLE TO RESTORE HEAD TO TRACK
; 00, A CALL TO CHECK_DRIVE PERFORMS ALL NECESSARY FUNCTIONS.
; IN EITHER CASE, CALLING ROUTINE MUST CHECK RETURN STATUS.
; RETURNS Z FLAG TRUE IF SUCCESSFUL, OR ERROR CODE IN D0.
;
START_FLOPPY
               BSR     CLEAR_FDC       ;(TRY TO) GET FDC TO NOT BUSY STATUS.
                                       ;RETURNS WITH Z FLAG SET IF FDC NOT BUSY,
               BNE.S   START_EXIT      ;ELSE RETURNS WITH ERROR CODE IN D0.
;
               BSR     CHECK_DRIVE     ;TEST FOR DISK IN DRIVE,SPINNING AT CORRECT SPEED.
                                       ;RETURNS WITH Z FLAG SET IF DRIVE STATUS IS OK,
               BNE.S   START_EXIT      ;ELSE RETURNS WITH ERROR CODE IN D0.
;
               BSR     TO_TRK_00       ;MOVE READ/WRITE HEAD OUT TO TRACK 00.
                                       ;RETURNS WITH Z FLAG SET IF HEAD WAS MOVED TO TRACK 00,
                                       ;ELSE RETURNS WITH ERROR CODE IN D0.
START_EXIT
               RTS
;
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
;
;
;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
;
; AS PART OF ERROR RECOVERY PROCEDURE, MOVE READ/WRITE HEAD AWAY FROM
; AND THEN BACK TO THE CURRENT TRACK POSITION.
; MOVEMENT MAY DISLODGE DEBRIS WHICH COULD BE CAUSING THE ERROR.
;
;15SEP; ALSO, SEEK BACK TO CURRENT TRACK IS DONE FROM TRACK 00 TO COVER
;15SEP; POSSIBILITY THAT STEPPER MOTOR HAS GONE OUT OF CALIBRATION.
;              TAKES TOO LONG ON INNER TRACKS ... DO IT ONLY ONCE ....
;              .... NOT HANDLED HERE ....
;
;28OCT; HEAD MOVEMENT OF + OR - 8 TRACKS TO ALLOW RE_SEEK TO COMPLETE BEFORE
;28OCT; SAME (FAILED) SECTOR COMES AROUND AGAIN (I.E., < 160 MSEC).
;
; HEAD MOVEMENT OF + OR - 1 TRACK TO KEEP THINGS DISCREET, ESPECIALLY
; WHERE SOFT ERRORS ARE INVOLVED - CALLING ROUTINE MAY EVENTUALLY OPT TO
; RECALIBRATE (ON TRACK 00) IF SEVERAL RE_SEEK RETRIES DON'T MAKE IT.
;
; RETURNS Z FLAG TRUE IF SUCCESSFUL, OR ERROR CODE IN D0.
;
RE_SEEK
               MOVE    CURRENT_TRACK,D0
               CMP     #40,D0
               BGE.S   RE_SEEK_10
               ADDQ    #1,D0                ;IF HEAD IS ON TRACK 00-39, STEP IN BY 1 TRACK.
               BRA.S   RE_SEEK_20
RE_SEEK_10
               SUBQ    #1,D0                ;IF HEAD IS ON TRACK 40-79, STEP OUT BY 1 TRACK.
RE_SEEK_20
               BSR     BLIND_SEEK
               BNE.S   RE_SEEK_EXIT         ;EXIT IF SEEK OPERATION RETURNS AN ERROR CODE.
;
;15SEP               BSR     TO_TRK_00            ;RECALIBRATE THE STEPPER MOTOR TO TRACK 00.
;15SEP               BNE.S   RE_SEEK_EXIT         ;EXIT IF RESTORE OPERATION RETURNS ERROR CODE.
;
               MOVE    CURRENT_TRACK,D0     ;NOW HEAD BACK TO CURRENT TRACK.
               BSR     BLIND_SEEK
               BNE.S   RE_SEEK_EXIT
               BSR     DLY_20_MSEC          ;IF NO ERROR, EXECUTE HEAD-SETTLING DELAY.
               CLR     D0                   ;ENSURE Z FLAG = 1 TO SIGNAL NORMAL COMPLETION.
RE_SEEK_EXIT
               RTS
;
;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
